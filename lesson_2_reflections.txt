What happens when you initialize a repository? Why do you need to do it?

  It creates a .git file that tracks files being synced with git. This file likely also contains other pertinent information about your git repository.

Now that you have your workspace set up, what do you want to try using it for?

  Pushing my commits to github and logging changes with branches!

How is the staging area different from the working directory and the repository? What value do you think it offers?

  The staging area is working within the directory but hasn't been pushed to the repository yet. This is valuable because not everything in my staging area might be ready to be pushed to the repository yet.

How can you use the staging area to make sure you have one commit per logical change?

  You can make sure you are using the staging area to only commit one logical change per logical commit but only adding one file to the staging area at a time.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

  The result of merging two branches together is that the two branches become one. I this instance the coin branch merges with the master branch and their commit histories are merged together.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?

  Some pros of using git's auto merging are the fact that it is very efficient and automatically shows merge issues in the code for me to review. A con of using it is the fact that sometimes code may be duplicated if two users write the same code but in different places.
